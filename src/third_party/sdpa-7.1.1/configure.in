dnl
dnl Configure for SDPA 7.1.1
dnl

AC_INIT(sdpa, 7.1.1)
AM_INIT_AUTOMAKE
AC_PROG_CC
AC_PROG_CXX
AC_CANONICAL_HOST

AC_ARG_WITH(blas,
[  --with-blas             Gives BLAS name you use(e.g., -lblas).],
BLAS_LIBS=$withval
)

AC_ARG_WITH(lapack,
[  --with-lapack           Gives LAPACK name you use(e.g., -llapack).],
LAPACK_LIBS=$withval
)

AC_ARG_WITH(system-spooles,
[  --with-system-spooles      Use spooles already on system],
WITH_SYSTEM_SPOOLES=$withval, WITH_SYSTEM_SPOOLES=no)
AM_CONDITIONAL(BUILD_SPOOLES, test x$WITH_SYSTEM_SPOOLES = xno)

AC_ARG_WITH(spooles-includedir,
[  --with-spooles-includedir    Gives spooles include dir you use(e.g., /usr/local/include/spooles).],
SPOOLES_INCLUDEDIR=$withval
)

AC_ARG_WITH(spooles-libdir,
[  --with-spooles-libdir    Gives spooles lib dir you use(e.g., /usr/local/lib).],
SPOOLES_LIBDIR=$withval
)

AC_ARG_ENABLE(metis,
[  --enable-metis    Build with metis],
[case "${enableval}" in
  yes) with_metis=yes ;;
  no)  with_metis=no  ;;
  *) AC_MSG_ERROR(bad value ${enableval} for --enable-metis) ;;
esac],[with_metis=no])
AM_CONDITIONAL(ENABLE_METIS, test x$with_metis = xyes)

AC_ARG_WITH(metis-includedir,
[  --with-metis-includedir    Gives metis include dir you use(e.g., /usr/local/include/metis).],
METIS_INCLUDEDIR=$withval
)

AC_ARG_WITH(metis-libdir,
[  --with-metis-libdir    Gives metis lib dir you use(e.g., /usr/local/lib).],
METIS_LIBDIR=$withval
)

dnl spooles and metis requires -lm when linking.
LIBS="-lm"

dnl How thread we link thread library esp. needed for spooles.
case "$host" in
        *-*-linux*|*-*-uclinux*)
            pthread_cflags="-D_REENTRANT"
            pthread_lib="-lpthread"
            ;;
        *-*-freebsd*|*-*-dragonfly*)
            pthread_cflags=""
            pthread_lib="-pthread"
            ;;
esac
LIBS="$LIBS $pthread_lib"
CXXFLAGS="$CXXFLAGS $pthread_cflags"
AC_SUBST(pthread_lib)

CFLAGS="$CFLAGS -O2 -funroll-all-loops"
CXXFLAGS="$CXXFLAGS -O2 -funroll-all-loops"
AC_SUBST(CFLAGS)
AC_SUBST(CXXFLAGS)

case "$host" in
        *apple-darwin*) # MacOSX
	;;

	*)
	AC_PROG_F77
	AC_F77_LIBRARY_LDFLAGS
	AC_F77_WRAPPERS
	AC_SUBST(FLIBS)
        ;;
esac

dnl check BLAS/LAPACK rountines
case "$host" in
        *apple-darwin*) # MacOSX
          BLAS_LIBS="-framework vecLib"
          LAPACK_LIBS=""
          FLIBS=""
          AC_SUBST(BLAS_LIBS)
          AC_SUBST(LAPACK_LIBS)
          AC_SUBST(FLIBS)
	;;

	*) #general one
          HAVE_BLAS=""
          dnl default blas name is libblas, thus we pass -lblas.
          if test x"$BLAS_LIBS" = x; then
          BLAS_LIBS="-lblas"
          fi
          save_LIBS="$LIBS"
          AC_F77_FUNC(dgemm)
          LIBS="$LIBS $BLAS_LIBS $FLIBS"
          AC_CHECK_FUNC($dgemm, [HAVE_BLAS=yes])
          LIBS="$save_LIBS"
          AC_SUBST(BLAS_LIBS)
          
          if test x"$HAVE_BLAS" != xyes; then
            echo "Please install one of your favorate BLAS"
            echo "BLAS:      http://www.netlib.org/blas/"
            echo "ATLAS:     http://math-atlas.sourceforge.net/"
            echo "GotoBLAS:  http://www.tacc.utexas.edu/resources/software/"
            AC_MSG_ERROR([No BLAS found])
          fi
          
          dnl Check whether we can call LAPACK subroutines
          HAVE_LAPACK=""
          dnl default lapack name is liblapack, thus we pass -llapack.
          if test x"$LAPACK_LIBS" = x; then
          LAPACK_LIBS="-llapack"
          fi
          save_LIBS="$LIBS"
          AC_F77_FUNC(dsyev)
          LIBS="$LIBS $LAPACK_LIBS $BLAS_LIBS $FLIBS"
          AC_CHECK_FUNC($dsyev, [HAVE_LAPACK=yes])
          LIBS="$save_LIBS"
          AC_SUBST(LAPACK_LIBS)
          
          if test x"$HAVE_LAPACK" != xyes; then
            echo "Please install one of your favorate LAPACK"
            echo "LAPACK:   http://www.netlib.org/lapack/"
            AC_MSG_ERROR([No LAPACK found])
          fi
       ;;
esac

dnl some dummy settings
if test x$SPOOLES_INCLUDEDIR = x; then
SPOOLES_INCLUDEDIR="."
fi
if test x$SPOOLES_LIBDIR = x; then
SPOOLES_LIBDIR="."
fi

dnl

AC_MSG_CHECKING([whether to enable metis])
if test "$with_metis" = "no"; then
  AC_MSG_RESULT([no])
  ENABLE_METIS=NO
  AC_SUBST(ENABLE_METIS)
else
  AC_MSG_RESULT([yes])
  ENABLE_METIS=YES
  AC_SUBST(ENABLE_METIS)

  if test x$METIS_INCLUDEDIR = x; then
  METIS_INCLUDEDIR="."
  fi
  if test x$METIS_LIBDIR = x; then
  METIS_LIBDIR="."
  fi

  dnl Check for METIS include and library files
  HAVE_METIS_HEADER=""
  HAVE_METIS=""
  save_CPPFLAGS="$CPPFLAGS"
  CPPFLAGS="$CPPFLAGS -I$METIS_INCLUDEDIR"
  AC_CHECK_HEADER(metis.h, HAVE_METIS_HEADER=yes)
  CPPFLAGS=$save_CPPFLAGS
  if test x$HAVE_METIS_HEADER = xyes; then
    save_LDFLAGS="$LDFLAGS"
    LDFLAGS="$LDFLAGS -L$METIS_LIBDIR"
    AC_CHECK_LIB(metis, METIS_NodeND, [METIS_LIBS="-lmetis"; HAVE_METIS=yes])
    LDFLAGS=$save_LDFLAGS
  fi

  if test x$HAVE_METIS != xyes; then
    echo "Please install METIS"
    echo "METIS http://glaros.dtc.umn.edu/gkhome/views/metis/index.html"
    AC_MSG_ERROR([No METIS found])
  fi
  AC_SUBST(METIS_LIBDIR)
  AC_SUBST(METIS_INCLUDEDIR)
fi

if test x$WITH_SYSTEM_SPOOLES != xno; then
  dnl Check for SPOOLES include and library files
  HAVE_SPOOLES_HEADER=""
  HAVE_SPOOLES=""
  save_CPPFLAGS="$CPPFLAGS"
  CPPFLAGS="$CPPFLAGS -I$SPOOLES_INCLUDEDIR"
  AC_CHECK_HEADER(SPOOLES.h, HAVE_SPOOLES_HEADER=yes)
  CPPFLAGS=$save_CPPFLAGS

  if test x$HAVE_SPOOLES_HEADER = xyes; then
    save_LDFLAGS="$LDFLAGS"
    LDFLAGS="$LDFLAGS -L$SPOOLES_LIBDIR"
    AC_CHECK_LIB(spooles, InpMtx_init, [SPOOLES_LIB="-lspooles"; HAVE_SPOOLES=yes])
    LDFLAGS=$save_LDFLAGS
  fi

  if test x$HAVE_SPOOLES != xyes; then
    echo "Please install SPOOLES"
    echo "SPOOLES http://www.netlib.org/linalg/spooles/spooles.2.2.html"
    AC_MSG_ERROR([No SPOOLES found])
  fi
else
SPOOLES_LIBDIR=`pwd`/spooles/build
SPOOLES_INCLUDEDIR=`pwd`/spooles/build

fi
AC_SUBST(SPOOLES_LIBDIR)
AC_SUBST(SPOOLES_INCLUDEDIR)

AC_OUTPUT(Makefile)
